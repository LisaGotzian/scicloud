% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/4_1_1_calculateModels.R
\name{calculateModels}
\alias{calculateModels}
\title{calculateModels}
\usage{
calculateModels(
  processedMetaDataMatrix,
  numberOfClusters = NA,
  minWordsPerCluster = 5,
  maxWordsPerCluster = 10,
  p = 0.05,
  dendrogram = TRUE,
  dendroLabels = "truncated",
  generateWordlist = FALSE,
  saveToWd = TRUE,
  ordinationFunction = FALSE
)
}
\arguments{
\item{processedMetaDataMatrix}{result of \code{\link{processMetaDataMatrix}}}

\item{numberOfClusters}{integer or NA; \cr
an integer sets the number of clusters manually \cr
for NA, the function automatically calculates results for 1 till 12 clusters}

\item{minWordsPerCluster}{minimum number of words to be plotted per cluster
in \code{\link{createOrdinationPlot}}.}

\item{maxWordsPerCluster}{maximum number of words to be plotted per cluster
in \code{\link{createOrdinationPlot}}.}

\item{p}{the p-value that sets the significance level of individual words for
the indicator species analysis. Only significant words will be plotted
in \code{\link{createOrdinationPlot}}.}

\item{dendrogram}{logical, whether or not to show a dendrogram of the calculated
clusters.}

\item{dendroLabels}{allows "truncated" or "break". This either truncates the
labels of the dendrogram leaves or puts a line break. Line breaks are not
recommended for a large number of PDFs.}

\item{generateWordlist}{logical, if set to \code{TRUE}, it generates a wordlist
called "scicloudWordlist.csv" in your working directory. The list
contains all significant words from the indicator species analysis
that are representative for the respective paper clusters. To work with the
new wordlist, read it in using \code{keepWordsFile} as an argument
to \code{\link{processMetaDataMatrix}} or \code{\link{ordinationCluster}}.}

\item{saveToWd}{a logical parameter whether or not to save the output of the
function to the working directory. This is especially useful for later
analysis steps. The file can be read in by using \code{\link[base]{readRDS}}.}

\item{ordinationFunction}{internal variable}
}
\value{
Returns a list with the following components:
\itemize{
    \item \code{IndVal}: the results of the indicator species analysis.
    \item \code{metaMatrix}: the metaMatrix that has been processed by
    \code{\link{processMetaDataMatrix}} including a cluster column for each paper
    \item \code{RepresentativePapers}: a dataframe of the most representative
    papers of each publication community. Papers are representative if they contain
    the highest number of significant words.
    \item \code{wordList}: a list of all words that have been used in the analysis.
    }
}
\description{
The fourth function to the word analysis with scicloud.
    It takes the cleaned data from \code{\link{processMetaDataMatrix}}
    and calculates clusters using \code{\link[stats]{hclust}}. The clusters
    are publication communities based on the words used in the papers.
    To then identify the words relevant to the communities, it runs an
    indicator species analysis.
    
    Each word receives an indicator species value by \code{\link[labdsv]{indval}}
    for each cluster, showing how representative a word is for a cluster. The top
    representative words will be used in the further process for \code{
    \link{createOrdinationPlot}}.
}
\examples{
\dontrun{

### The normal workflow of scicloud
myAPIKey <- "YOUR_API_KEY"
metaMatrix <- createTextMatrixFromPDF()


# instead of ordinationCluster(), we can also run this
# workflow step by step.

# 1) pull article metadata from scopus
metaMatrix <- getScopusMetaData(metaMatrix, myAPIKey)

# 2) process the full texts
processedMetaDataMatrix <- processMetaDataMatrix(
          metaMatrix,
          list(language = "SMART",
          stemWords = TRUE,
          saveToWd = FALSE),
          ignoreWords = c("Abstract", "Bulletin", "Editor"))
                                  
# 3) run the cluster analysis to determine publication communities
scicloudAnalysis <- calculateModels(processedMetaDataMatrix)

# 4) visualize the results
createOrdinationPlot(scicloudAnalysis)

# 5) a list of the most important papers per cluster
mostImportantPaperPerCluster(scicloudAnalysis)

# 6) a summary of the analysis
scicloudSpecs <- inspectScicloud(scicloudAnalysis)
    }
}
\seealso{
\itemize{
    \item \code{\link{processMetaDataMatrix}} for the preceding step
    \item \code{\link{createOrdinationPlot}} for the next step and
    \item \code{\link{mostImportantPaperPerCluster}} for the next step
    \item \code{\link{inspectScicloud}} for a summary of the analysis
    }

Other scicloud functions: 
\code{\link{createOrdinationPlot}()},
\code{\link{createTextMatrixFromPDF}()},
\code{\link{delete_RDS}()},
\code{\link{getScopusMetaData}()},
\code{\link{inspectScicloud}()},
\code{\link{mostImportantPaperPerCluster}()},
\code{\link{ordinationCluster}()},
\code{\link{processMetaDataMatrix}()},
\code{\link{rename_PDFs}()},
\code{\link{searchScopus}()}
}
\author{
Matthias Nachtmann, \email{matthias.nachtmann@stud.leuphana.de},
    Lisa Gotzian, \email{lisa.gotzian@stud.leuphana.de}
}
\concept{scicloud functions}
