% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createScicloudList.R
\name{createScicloudList}
\alias{createScicloudList}
\title{Create a scicloud list}
\usage{
createScicloudList(
  directory = file.path(".", "PDFs"),
  myAPIKey = NA,
  language = "SMART",
  stemWords = TRUE,
  saveToWd = FALSE,
  long_msg = FALSE,
  ignoreWords = c(),
  keepWordsFile = NA
)
}
\arguments{
\item{directory}{per default, the PDFs are expected to be in a folder named
"PDFs", can be changed ad. lib.}

\item{myAPIKey}{your private Elsevier API key for communicating with the
API. You can request one at \url{https://dev.elsevier.com/index.jsp}.}

\item{language}{this defines the stopwords to be filtered. the default is
"SMART". Look at \code{\link[tm]{stopwords}} for more information.\cr}

\item{stemWords}{logical variable which is passed to processMetaDataMatrix.}

\item{saveToWd}{a logical parameter whether or not to save the output of the
function to the working directory. This is especially useful for later
analysis steps. The file can be read in by using \code{\link[base]{readRDS}}.}

\item{long_msg}{logical variable to whether print long message or not
 When it is TRUE, every word is transformed to its stem. Look at 
\code{\link[tm]{stemDocument}} for more information.}

\item{ignoreWords}{a vector of words to be ignored which is passed to processMetaDataMatrix. 
Refer \code{\link{processMetaDataMatrix.}} for details.}

\item{keepWordsFile}{path to a .csv-file that specifies which words to keep
during the analysis. Accepts 0/1 behind each word or takes the words
as they are and disregards all other words of the analysis.}
}
\value{
Returns a list with the following components:
\itemize{
    \item \code{Tf_Idf}: the tf-idf document term matrix.
    \item \code{wordList}: a list of all words that have been used in the analysis.
    \item \code{metaMatrix}: a matrix with 21 columns that contains information (DOI, Year, Authors, etc.) \cr
    and its FullText from each pdf that has been pre-processed by method \cr
    defined in the arguments. Information (Title, Abstract, Journal, etc.) are retrieved
    through the API of Scopus. Please note that without a proper API and a valid connection 
    to Scopus within a recognized network, these information will not be retrieved successfully 
    }
}
\description{
The first function to be called to perform analysis with scicloud. 
It outputs a list of 3 components: metaMatrix, Tf_Idf and wordList. 
The function takes all scientific papers as PDF files from the "PDFs" folder 
in your working directory or any other specified directory to create a metaMatrix. 
Then it further pre-processes the full text retrieved with the method specified 
(eg. stemWords, language) in order to output a tf-idf matrix. 
All the words that appear in the PDFs and have been included in the analysis 
(could be specified with the argument 'keepWordsFile') is saved as the wordList.
}
\examples{
\dontrun{

### Workflow of performing analysis using scicloud
myAPIKey <- "YOUR_API_KEY"
# retrieving data from PDFs and Scorpus website using API  
scicloudList <- createScicloudList(myAPIKey = myAPIKey)

# Run the analysis with a specified no. of cluster
scicloudAnalysis <- runAnalysis(scipusList = scipusList, numberOfClusters = 4)
                           
# Generate a summary of the analysis 
scicloudSpecs <- inspectScicloud(scicloudAnalysis)
}
}
\seealso{
Other scicloud functions: 
\code{\link{deleteRDS}()},
\code{\link{getScopusMetaData}()},
\code{\link{inspectScicloud}()},
\code{\link{runAnalysis}()}
}
\author{
Jia Yan Ng, \email{Jia.Y.Ng@stud.leuphana.de}, 
Johann Julius Beeck, \email{johann.j.beeck@stud.leuphana.de}
}
\concept{scicloud functions}
